{"version":3,"file":"react.cjs.production.min.js","sources":["../src/lib/handler.ts","../src/index.ts"],"sourcesContent":["import { FormcarryResponse } from './types'\n\nconst backgroundColor = '#262335'\nconst backgroundProperty = `background-color: ${backgroundColor}`\nconst yellow = '#FEDE5D'\nconst pink = '#D86FD4'\nconst orange = '#F88839'\nconst gray = '#E2E1E5'\nconst grayDarker = '#B3AEAE'\nconst turquoise = '#36F5F3'\nconst lightBlue = '#84C9F4'\n\nexport function errorHandler(err: FormcarryResponse) {\n\tconsole.group('%c ðŸš¨ Formcarry Error ðŸš¨', 'background: #E44141; color: #fff')\n\tconsole.table(err)\n\tconsole.log(\n\t\t`%cif you want to disable debugging, just set debug to false like:`,\n\t\t'color: #11C759',\n\t)\n\tconsole.log(\n\t\t'%cconst %c{state, submit} %c= %cuseForm%c(%c{ %cdebug%c: %cfalse %c}%c);',\n\t\t`${backgroundProperty}; color: ${yellow}`,\n\t\t`${backgroundProperty}; color: ${pink}`,\n\t\t`${backgroundProperty}; color: ${gray}`,\n\t\t`${backgroundProperty}; color: ${turquoise}`,\n\t\t`${backgroundProperty}; color: ${pink}`,\n\t\t`${backgroundProperty}; color: ${turquoise}`,\n\t\t`${backgroundProperty}; color: ${yellow}`,\n\t\t`${backgroundProperty}; color: ${grayDarker}`,\n\t\t`${backgroundProperty}; color: ${orange}`,\n\t\t`${backgroundProperty}; color: ${lightBlue}`,\n\t\t`${backgroundProperty}; color: ${pink}`,\n\t)\n\tconsole.groupEnd()\n}\n\nexport function noIdHandler() {\n\tconsole.log(\n\t\t'%cðŸ’¥ Please set your form ID, you can get it from your dashboard: https://formcarry.com/profile/my-forms',\n\t\t'background-color: #FCB56D; color: #000',\n\t)\n\tconsole.log(\n\t\t'%cconst %c{state, submit} %c= %cuseForm%c(%c{ %cid%c: %c\"Your Form ID\" %c}%c);',\n\t\t`${backgroundProperty}; color: ${yellow}`,\n\t\t`${backgroundProperty}; color: ${pink}`,\n\t\t`${backgroundProperty}; color: ${gray}`,\n\t\t`${backgroundProperty}; color: ${turquoise}`,\n\t\t`${backgroundProperty}; color: ${pink}`,\n\t\t`${backgroundProperty}; color: ${turquoise}`,\n\t\t`${backgroundProperty}; color: ${yellow}`,\n\t\t`${backgroundProperty}; color: ${grayDarker}`,\n\t\t`${backgroundProperty}; color: ${orange}`,\n\t\t`${backgroundProperty}; color: ${lightBlue}`,\n\t\t`${backgroundProperty}; color: ${pink}`,\n\t)\n}\n","import React, { useState, useEffect } from 'react'\nimport { Props, FormcarryResponse } from './lib/types'\nimport { errorHandler, noIdHandler } from './lib/handler'\n\nfunction useForm(props: Props) {\n\tconst { id, debug = true, extraData } = props\n\tconst [submitted, setSubmitted] = useState<boolean>(false)\n\tconst [submitting, setSubmitting] = useState<boolean>(false)\n\tconst [error, setError] = useState<any>(undefined)\n\tconst [response, setResponse] = useState<FormcarryResponse>()\n\n\tuseEffect(() => {\n\t\tif (error && debug) {\n\t\t\terrorHandler(error)\n\t\t}\n\t}, [debug, error])\n\n\tfunction submit(event: React.FormEvent<HTMLFormElement>) {\n\t\t// prevent redirection\n\t\tevent.preventDefault()\n\n\t\tif (!id) {\n\t\t\tnoIdHandler()\n\t\t\treturn\n\t\t}\n\n\t\tconst data = new FormData(event.currentTarget)\n\n\t\tif (typeof extraData === 'object') {\n\t\t\tfor (const item in extraData) {\n\t\t\t\tif (extraData.hasOwnProperty(item)) {\n\t\t\t\t\tdata.append(item, extraData[item])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// reset states.\n\t\tsetSubmitted(false)\n\t\tsetError(undefined)\n\t\tsetResponse(undefined)\n\n\t\tsetSubmitting(true)\n\n\t\tfetch(`https://formcarry.com/s/${id}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { Accept: 'application/json' },\n\t\t\tbody: data,\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then((res: FormcarryResponse) => {\n\t\t\t\tif (res.code === 200) {\n\t\t\t\t\tsetSubmitted(true)\n\t\t\t\t\tsetResponse(res)\n\t\t\t\t} else {\n\t\t\t\t\tsetError(res)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetError(err)\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetSubmitting(false)\n\t\t\t})\n\t}\n\n\treturn { state: { error, response, submitting, submitted }, submit }\n}\n\nexport { useForm }\n"],"names":["backgroundProperty","pink","props","id","_props$debug","debug","extraData","useState","submitted","setSubmitted","submitting","setSubmitting","undefined","error","setError","response","setResponse","useEffect","err","console","group","table","log","groupEnd","state","submit","event","preventDefault","data","FormData","currentTarget","item","hasOwnProperty","append","fetch","method","headers","Accept","body","then","res","json","code"],"mappings":"2FAGMA,8BAEAC,EAAO,0BCDb,SAAiBC,GAChB,IAAQC,EAAgCD,EAAhCC,GAAEC,EAA8BF,EAA5BG,MAAAA,gBAAcC,EAAcJ,EAAdI,YACQC,YAAkB,GAA7CC,OAAWC,SACkBF,YAAkB,GAA/CG,OAAYC,SACOJ,gBAAcK,GAAjCC,OAAOC,SACkBP,aAAzBQ,OAAUC,OAwDjB,OAtDAC,aAAU,eDCkBC,ECAvBL,GAASR,IDAca,ECCbL,EDAfM,QAAQC,MAAM,2BAA4B,oCAC1CD,QAAQE,MAAMH,GACdC,QAAQG,wEAEP,kBAEDH,QAAQG,IACP,2EACGtB,EAAAA,mBACAA,cAA8BC,EAC9BD,EAAAA,mBACAA,EAAAA,mBACAA,cAA8BC,EAC9BD,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,mBACAA,cAA8BC,GAElCkB,QAAQI,cClBL,CAAClB,EAAOQ,IAkDJ,CAAEW,MAAO,CAAEX,MAAAA,EAAOE,SAAAA,EAAUL,WAAAA,EAAYF,UAAAA,GAAaiB,OAhD5D,SAAgBC,GAIf,GAFAA,EAAMC,kBAEDxB,EAEJ,ODcFgB,QAAQG,IACP,2GACA,+CAEDH,QAAQG,IACP,iFACGtB,EAAAA,mBACAA,cAA8BC,EAC9BD,EAAAA,mBACAA,EAAAA,mBACAA,cAA8BC,EAC9BD,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,mBACAA,cAA8BC,GC3BjC,IAAM2B,EAAO,IAAIC,SAASH,EAAMI,eAEhC,GAAyB,iBAAdxB,EACV,IAAK,IAAMyB,KAAQzB,EACdA,EAAU0B,eAAeD,IAC5BH,EAAKK,OAAOF,EAAMzB,EAAUyB,IAM/BtB,GAAa,GACbK,OAASF,GACTI,OAAYJ,GAEZD,GAAc,GAEduB,iCAAiC/B,EAAM,CACtCgC,OAAQ,OACRC,QAAS,CAAEC,OAAQ,oBACnBC,KAAMV,IAELW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACC,GACW,MAAbA,EAAIE,MACPjC,GAAa,GACbO,EAAYwB,IAEZ1B,EAAS0B,aAGJ,SAAAtB,GACNJ,EAASI,eAED,WACRP,GAAc"}